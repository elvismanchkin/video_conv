#!/bin/bash
# Default configuration for GPU Video Converter

# Quality and encoding settings
readonly DEFAULT_QUALITY_PARAM=24
readonly DEFAULT_STEREO_BITRATE="192k"
readonly DEFAULT_MAX_BITRATE="50M"
readonly DEFAULT_BUFFER_SIZE="100M"

# Override with environment variables if set
readonly QUALITY_PARAM=${CVRT_QUALITY:-$DEFAULT_QUALITY_PARAM}
readonly STEREO_BITRATE=${CVRT_STEREO_BITRATE:-$DEFAULT_STEREO_BITRATE}
readonly MAX_BITRATE=${CVRT_MAX_BITRATE:-$DEFAULT_MAX_BITRATE}
readonly BUFFER_SIZE=${CVRT_BUFFER_SIZE:-$DEFAULT_BUFFER_SIZE}

# Hardware detection settings
readonly MIN_RAM_DISK_GB=1
readonly RAM_DISK_PATH="/dev/shm"

# Encoder priority scoring (higher = better)
get_encoder_score() {
    case "$1" in
        NVENC) echo 100 ;;
        QSV) echo 90 ;;
        VAAPI) echo 80 ;;
        SOFTWARE) echo 50 ;;
        *) echo 0 ;;
    esac
}

# Complexity thresholds (pixels)
readonly HIGH_COMPLEXITY_THRESHOLD=8000000    # ~4K
readonly MEDIUM_COMPLEXITY_THRESHOLD=2000000  # ~1080p

# Required dependencies (readonly - these should never change)
readonly -a REQUIRED_TOOLS=(
    "ffmpeg"
    "ffprobe"
    "jq"
)

# Optional dependencies for hardware acceleration (readonly - these should never change)
readonly -a OPTIONAL_TOOLS=(
    "vainfo"
    "nvidia-smi"
)

# Input file extensions to process (user-overridable)
# Users can override these in custom.conf by redefining the arrays
SUPPORTED_INPUT_EXTENSIONS=(
    "mkv"
    "mp4"
    "avi"
    "mov"
    "m4v"
    "wmv"
    "flv"
    "webm"
    "ts"
    "mts"
    "m2ts"
)

# Output format options (user-overridable)
# Users can override these in custom.conf by redefining the arrays
SUPPORTED_OUTPUT_FORMATS=(
    "mkv"
    "mp4"
    "mov"
    "webm"
)

# Default output format
readonly DEFAULT_OUTPUT_FORMAT="mkv"

# Audio codec options (user-overridable)
# Users can override these in custom.conf by redefining the arrays
SUPPORTED_AUDIO_CODECS=(
    "aac"
    "ac3"
    "opus"
    "flac"
    "mp3"
)

# Default audio codec
readonly DEFAULT_AUDIO_CODEC="aac"

# Video codec options (user-overridable)
# Users can override these in custom.conf by redefining the arrays
SUPPORTED_VIDEO_CODECS=(
    "hevc"    # H.265
    "h264"    # H.264
    "av1"     # AV1 (newer cards)
    "vp9"     # VP9
)

# Default video codec
readonly DEFAULT_VIDEO_CODEC="hevc"

# Container format mapping (user-overridable)
# Users can override these in custom.conf by redefining the associative array
declare -A CONTAINER_FORMATS
CONTAINER_FORMATS[mkv]="matroska"
CONTAINER_FORMATS[mp4]="mp4"
CONTAINER_FORMATS[mov]="mov"
CONTAINER_FORMATS[webm]="webm"

# Temporary file naming pattern
readonly TEMP_FILE_PREFIX="cvrt-temp"

# Advanced encoding options
readonly DEFAULT_PRESET="medium"
readonly DEFAULT_TUNE="film"
readonly DEFAULT_PROFILE="main"
readonly DEFAULT_LEVEL="4.1"

# Subtitle handling
readonly DEFAULT_SUBTITLE_MODE="copy"  # copy, burn, extract, none
readonly DEFAULT_SUBTITLE_LANGUAGE="eng"

# Metadata handling
readonly DEFAULT_METADATA_MODE="copy"  # copy, strip, minimal

# Filter options
readonly DEFAULT_SCALE_MODE="none"     # none, 1080p, 720p, 4k, custom
readonly DEFAULT_DEINTERLACE=false
readonly DEFAULT_DENOISE=false
readonly DEFAULT_SHARPEN=false

# Performance options
readonly DEFAULT_THREADS=0             # 0 = auto-detect
readonly DEFAULT_BUFFER_SIZE_MB=100
readonly DEFAULT_MAX_MEMORY_GB=4

# Validation arrays for argument checking
SUPPORTED_SCALE_MODES=(
    "none"
    "1080p"
    "720p"
    "480p"
    "4k"
    "custom"
)

SUPPORTED_ENCODING_PRESETS=(
    "ultrafast"
    "superfast"
    "veryfast"
    "faster"
    "fast"
    "medium"
    "slow"
    "slower"
    "veryslow"
)

SUPPORTED_SUBTITLE_MODES=(
    "copy"
    "burn"
    "extract"
    "none"
)

SUPPORTED_METADATA_MODES=(
    "copy"
    "strip"
    "minimal"
)

# --- Custom user overrides ---
# Source custom configuration from multiple locations in order of precedence:
# 1. Current working directory (highest priority - for project-specific configs)
# 2. XDG config directory (~/.config/video_conv/custom.conf)
# 3. User home directory (~/.video_conv.conf)
# 4. Script directory (lowest priority - for system-wide defaults)

# Function to source config file if it exists
source_config_if_exists() {
    local config_file="$1"
    if [[ -f "$config_file" ]]; then
        log_debug "Loading custom configuration: $config_file"
        source "$config_file"
        return 0
    fi
    return 1
}

# 1. Current working directory (highest priority)
if source_config_if_exists "./custom.conf"; then
    log_debug "Loaded custom config from current directory"
fi

# 2. XDG config directory
if [[ -n "${XDG_CONFIG_HOME:-}" ]]; then
    XDG_CONFIG_FILE="${XDG_CONFIG_HOME}/video_conv/custom.conf"
else
    XDG_CONFIG_FILE="${HOME:-~}/.config/video_conv/custom.conf"
fi

if source_config_if_exists "$XDG_CONFIG_FILE"; then
    log_debug "Loaded custom config from XDG directory"
fi

# 3. User home directory
if source_config_if_exists "${HOME:-~}/.video_conv.conf"; then
    log_debug "Loaded custom config from home directory"
fi

# 4. Script directory (lowest priority - for system-wide defaults)
if source_config_if_exists "${BASH_SOURCE%/*}/custom.conf"; then
    log_debug "Loaded custom config from script directory"
fi

# Make arrays readonly after potential custom overrides
readonly -a SUPPORTED_INPUT_EXTENSIONS
readonly -a SUPPORTED_OUTPUT_FORMATS
readonly -a SUPPORTED_AUDIO_CODECS
readonly -a SUPPORTED_VIDEO_CODECS
readonly -a SUPPORTED_SCALE_MODES
readonly -a SUPPORTED_ENCODING_PRESETS
readonly -a SUPPORTED_SUBTITLE_MODES
readonly -a SUPPORTED_METADATA_MODES
readonly -A CONTAINER_FORMATS
